python manage.py runserver
Для работы oauth нужно открывать приложение через localhost:8000 а не 127.0.0.1
http://localhost:8000/oauth/

---- Создание суперпользователя

python manage.py createsuperuser
admin
admin@mail.ru
qwerty

Использование административной панели:
http://127.0.0.1:8000/admin/
Аутентифицируемся
можно создавать группы и пользователей


---- Настраиваем библиотеку social-auth-app-django

Добавляем в INSTALLED APPS:
'social_django',

Указываем в секции Templates шаблоны для context_processors:
    'social_django.context_processors.backends',
    'social_django.context_processors.login_redirect',


Для работы библиотеки надо внести данные в секцию AUTHENTICATION_BACKENDS
Будем использовать ВК

AUTHENTICATION_BACKENDS = (
    'social_core.backends.vk.VKOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)

Добавляем переменные ккоторые будут отвечать за учётные данные
SOCIAL_AUTH_VK_OAUTH2_KEY
SOCIAL_AUTH_VK_OAUTH2_SECRET
SOCIAL_AUTH_VK_OAUTH2_SCOPE - список передаваемых данных и разрешений (и работа оффлайн)

Для авторизации через вк нужно почитать документацию ВК и создать приложение:
Создаём приложение в вк для разработчиков:

выбираем название, например - oauth_app_2_0
В платформе выбираем - Сайт
в адресе сайта - http://hocalhost:8000
Базовый домен - hocalhost
ПОДКЛЮЧИТЬ САЙТ

Проходим двухфакторную аутентификацию
Заходим в настройки приложения
- ID приложения
- защищённый ключ

---- Нам нужно указать маршруты для того,чтобы библиотека могла работать

Для этого в приложении создаём файл urls.py в oauth_app
В urlpatterns добавляем нужные пути - к Views, к информации о пользователе, путь 'social' для библиотки

Также надо внести правки в основной файл urls.py
Туда нужно добавить путь до приложени с авторизацией, а также route social-auth/

---- для того, чтобы отображать информацию, необходимы простые шаблоны
Создаём директорию templates/ в oauth_app
Понадобятся 2 шаблона:
index.html - содержит кнопку, которая будет вести на авторизацию через oauth2
В ссылку включён тег, который будет парситься библиотекой social-django. Это настраивали в секции TEMPLATES
profile.html - передаём имя пользователя, которое получим после авторизации

---- Далее надо изменить файл views.py из oauth_app
Создаём функции index и profile для обработки соответствующих HTML-страниц

----  Нужно изменить настройки приложения. Внести доверенный redirect_url
Это необходимо чтобы отрабатывал протокол oauth2
Для получения acces_token для доступа к данным нужен доверенный redirect_url




